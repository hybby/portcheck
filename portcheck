#!/usr/bin/perl

# modules #############################

use strict;
use warnings;
use lib qw(../local_mods);
use IO::Socket::PortState qw(check_ports);
use Getopt::Std;
use Term::ANSIColor qw(:constants);;

# get options ##########################

getopts('c:f:hp:');

# variables ###########################

local $Term::ANSIColor::AUTORESET = 1; # reset colors jic

my $usage = qq{$0 - check whether ports are open on host

usage:
  $0 -p 80,8080         check ports 80,8080
  $0 -c host1,host2     check default ports on host1 and host2
  $0 -f [hostfile]      check default ports on all hosts in hostfile
  $0 -h                 this help message

};

my @hosts = parse_hosts();
my @ports = parse_ports();
my $hostn = "";
my $port = "";
my $timeout = "2";
our $opt_c;
our $opt_f;
our $opt_h;
our $opt_p;

# subroutines ##########################

sub parse_hosts {
  my @eachhost;

  if ($opt_f) {
    open(FH, "<", $opt_f) or die "cannot open $opt_f: $!";
    while (<FH>) {
      chomp;
      push(@eachhost,$_);
    }
    return @eachhost;
  } elsif ($opt_c) {
      @eachhost = split(',',$opt_c);
  } elsif ($opt_h) {
      print $usage;
      exit 0;
  } else {
      print $usage;
      exit 1;
    }
  return @eachhost;
  }

sub parse_ports {
  my @eachport;

  if ($opt_p) {
    @eachport = split(',',$opt_p);
  } else {
    print "No ports specified... using 22 (ssh) and 23 (telnet) by default\n\n";
    @eachport = ("22","23");
  }
return @eachport;
}

# main #################################

print "\n";

foreach $hostn (@hosts) {
  foreach $port (@ports) {
    my %porthash = (
                 tcp => {
                     $port => { name => $port }
                     }
                   );

    check_ports($hostn,$timeout,\%porthash);
    if ($porthash{tcp}{$port}{open}) {
      print "$hostn:$port";
      print BOLD, GREEN, "\topen\n", RESET;
    } else {
      print "$hostn:$port";
      print BOLD, RED, "\tclosed\n", RESET;
    }
  }
  print "\n";
};


